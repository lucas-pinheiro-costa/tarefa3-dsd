// Especifica a versão da sintaxe do Protocol Buffers que estamos usando.
syntax = "proto3";

// Pacote opcional para evitar conflitos de nomes, especialmente útil em Java.
option java_package = "br.com.grpc.iot";
option java_multiple_files = true;

// Importamos o tipo Timestamp para lidar com datas e horas de forma padronizada.
import "google/protobuf/timestamp.proto";

// Definição do nosso serviço de monitoramento.
service MonitorService {
  // O cliente envia um FLUXO (stream) de dados do sensor e, ao final,
  // o servidor retorna um único StatusResposta.
  // Esta é a definição de um "Client Streaming RPC".
  rpc EnviarDadosSensor(stream SensorData) returns (StatusResposta);
}

// A mensagem que representa uma única leitura do sensor.
message SensorData {
  string sensor_id = 1;         // Identificador único do sensor, ex: "cozinha-temp"
  float temperatura = 2;        // Valor da temperatura em Celsius
  float umidade = 3;            // Percentual de umidade
  google.protobuf.Timestamp timestamp = 4; // Data e hora da leitura
}

// A mensagem de resposta que o servidor enviará após receber todo o fluxo.
message StatusResposta {
  string mensagem = 1;
  int32 total_leituras_recebidas = 2;
}